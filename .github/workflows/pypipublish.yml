name: Publish Python Package

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools wheel
      - name: Put version in environment
        id: bump
        run: |
          # from refs/tags/v1.2.3 get 1.2.3
          VERSION=$(echo $GITHUB_REF | sed 's#.*/v##')
          echo "::set-output name=version::$VERSION"
        shell: bash
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m build
          twine upload dist/*
      - name: Autobump plugin version
        run: |
          # from refs/tags/v1.2.3 get 1.2.3
          VERSION=$(echo $GITHUB_REF | sed 's#.*/v##')
        shell: bash
      - name: Sleep until pypi is available
        id: pypiwait
        run: |
          # from refs/tags/v1.2.3 get 1.2.3 and make sure it's not an empty string
          VERSION=$(echo $GITHUB_REF | sed 's#.*/v##')
          if [ -z "$VERSION" ]
          then
            echo "No tagged version found, exiting"
            exit 1
          fi
          sleep 300
          LINK="https://pypi.org/project/kubr/${VERSION}/"
          for i in {1..60}; do
            result=$(curl -L -I -s -f ${LINK})
            if [ $? -eq 0 ]; then
              echo "Found pypi for $LINK"
              exit 0
            else
              echo "Did not find - Retrying in 10 seconds..."
              sleep 10
            fi
          done
          exit 1
        shell: bash
    outputs:
      version: ${{ steps.bump.outputs.version }}